"""  coded by Dvoretsky Vasily
     mail:  vasya.dvoretsky@yandex.ru
     
"""
"""importing required libraries """
import cv2           #library of computer vision
import numpy as np   #library of math

#PI = np.float32( 3,1415926535897932384626433832795)
"""importing the image"""
img = cv2.imread('1.jpg',3)
#img = cv2.imread("1.jpg",3)


"""drawing a circle of certain size """
cv2.circle(img, (22,22),21, (200,200,80), -1)           
"""converting of the image into grayscale """
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
#cv2.imshow('circles', gray )                       

     
"""Applying Hough algorithm to the image"""
circles = cv2.HoughCircles(gray, cv2.HOUGH_GRADIENT, 1,33,param1=2,param2=15,minRadius=33,maxRadius=37)

print( circles)
"""A bit of  information for people without without telepathic abilities  XD
#   circles is a three-dimensional array of ([[[x1, y1,r1]
                                               [x2, y2,r2]
                                               ..........
                                               [xn,yn,rn]]])
#   it can be represented as              ([[[i[0][ 0 ][0],i[0][ 0 ][1],i[0][ 0 ][2]]
                                             [i[0][ 1 ][0],i[0][ 1 ][1],i[0][ 1 ][2]]
                                              ........................................
                                             [i[0][n-1][0],i[0][n-1][1],i[0][n-1][2]]]])
#   
#            n is a number of found by hough algorithm circles
#       to decreaze the dimensions of an array i use ...
#       array = array[0]
#       it converts the array into         ([[[i[ 0 ][0],i[ 0 ][1],i[ 0 ][2]]
                                              [i[ 1 ][0],i[ 1 ][1],i[ 1 ][2]]
                                              ........................................
                                              [i[n-1][0],i[n-1][1],i[n-1][2]]]])
#        thus shortening the length of the request 
#


"""
for i in circles[0,:]:
    
    cv2.circle(img,(i[0],i[1]),i[2],(0,255,0),2)
    cv2.circle(img,(i[0],i[1]),2,(0,0,255),3)
   

cv2.imshow('circles1', img)

original_array = circles
or_a = original_array[0]
#defining the parameters of the source array
first, second,third  = np.shape(original_array)
#printing found parameters with detailed description
print("Parameters of source array ")
print("first  =",first)
print("second =",second)
print("third  =",third)

number_of_rows = np.int_(second*(second-1)/2)
print("number_of_rows =",number_of_rows)
#new_array = np.random.uniform(size=(number_of_rows ,1))
new_array = np.empty([number_of_rows, 1],dtype=float)


"""begin writing lenghth
_______________________________________________________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLL_______________________________________
____________________________________LLLLLLLLLLLLLLLLL__________________________
_______________________________________________________________________________

"""
print("calculated lenght")
k=0
for i in range(second-1):
        for j in range(1,second):
            if j<i or j==i:
#                print("пропускаем",i,j)
                j=j+1
            else:
#            print("берём",i,j)
                new_array[k] = np.sqrt((or_a[i][0]- or_a[j][0])**2 + (or_a[i][1]- or_a[j][1])**2 )
#                print("берём",i,j,new_array[i])
                k=k+1
                j=j+1
        continue
#    i=i+1
   
print(new_array)
    
"""finish writing lenghth___________________ """


"""begin writing angle
_______________________________________________________________________________
_________________________________________AAAAA_________________________________
________________________________________AA___AA________________________________
_______________________________________AA_____AA_______________________________
______________________________________AA_______AA______________________________
_____________________________________AA_________AA_____________________________
____________________________________AAAAAAAAAAAAAAA____________________________
___________________________________АА_____________АА___________________________
__________________________________AA_______________AA__________________________
_________________________________AA_________________AA_________________________
_______________________________________________________________________________
"""
print("calculated angle")
k1=0
for i in range(second-1):
        for j in range(1,second):
            if j<i or j==i:
#                print("пропускаем",i,j)
                j=j+1
            else:
#            print("берём",i,j)
#               
                new_array[k1] = np.rad2deg(np.arctan((or_a[i][1]- or_a[j][1])/(or_a[i][0]- or_a[j][0])))
#                print("берём",i,j,new_array[i])
                k=k+1
                j=j+1
        continue
#    i=i+1
   
print(new_array)
    
"""finish writing langle___________________ """


"""begin writing Betta
_______________________________________________________________________________
____________________________________BBBBBBBBBB_________________________________
____________________________________BBB______BBB_______________________________
____________________________________BBB_______BBB______________________________
____________________________________BBB______BBB_______________________________
____________________________________BBBBBBBBBB_________________________________
____________________________________BBB______BBB_______________________________
____________________________________BBB_______BBB______________________________
____________________________________BBB______BBB_______________________________
____________________________________BBBBBBBBBBB________________________________
_______________________________________________________________________________
"""
print("calculated betta")
k2=0
for i in range(second-1):
        for j in range(1,second):
            if j<i or j==i:
#                print("пропускаем",i,j)
                j=j+1
            else:
#            print("берём",i,j)
                new_array[k2] = or_a[i][1]+ ((or_a[i][1]- or_a[j][1])/(or_a[i][0]- or_a[j][0]))*or_a[i][0] 
#                print("берём",i,j,new_array[i])
                k=k+1
                j=j+1
        continue
#    i=i+1
   
print(new_array)
    
"""finish writing betta___________________ """

k = cv2.waitKey(0)
if k == 27:
    cv2.destroyAllWindows()
